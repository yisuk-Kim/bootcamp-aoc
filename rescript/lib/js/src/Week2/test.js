// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Belt_MapString = require("rescript/lib/js/belt_MapString.js");

function check(str) {
  var rule = /^0*[0-9+]{9}$/;
  return rule.test(str);
}

console.log(check("012345678"));

console.log(check("000000008"));

console.log(check("012345670"));

console.log(check("112345678"));

console.log(check("1112345678"));

console.log(check("1123456a78"));

var m = Belt_MapString.fromArray([
      [
        "a",
        1
      ],
      [
        "b",
        2
      ]
    ]);

console.log("134cm".slice(0, -2));

var rule = /^#[a-z0-9+]{6}$/;

var match = Belt_Option.map(undefined, (function (x) {
        return rule.test(x);
      }));

console.log(match !== undefined ? (
        match ? undefined : "2"
      ) : "1");

console.log(Caml_obj.caml_lessequal(undefined, 1));

function isInValidRange(data, min, max) {
  var num = Belt_Int.fromString(data);
  var match = Belt_Option.map(num, (function (x) {
          return [
                  x >= min,
                  x <= max
                ];
        }));
  if (match !== undefined && match[0] && match[1]) {
    return true;
  } else {
    return false;
  }
}

console.log("=====");

console.log(isInValidRange("3", 1, 2));

var hcl;

exports.check = check;
exports.m = m;
exports.rule = rule;
exports.hcl = hcl;
exports.isInValidRange = isInValidRange;
/*  Not a pure module */
