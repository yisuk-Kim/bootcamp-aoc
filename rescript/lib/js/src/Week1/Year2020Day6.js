// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SetString = require("rescript/lib/js/belt_SetString.js");

var input = Fs.readFileSync("input/Week1/Year2020Day6.input.txt", "utf8");

function splitGroup(data) {
  return data.split("\n\n");
}

function splitPerson(data) {
  return data.split("\n");
}

function splitAnswer(answer) {
  return answer.split("");
}

var answerArrayToSet = Belt_SetString.fromArray;

function getUnion(answer) {
  return Belt_Array.reduce(answer, undefined, Belt_SetString.union);
}

var getSize = Belt_SetString.size;

function sum(num) {
  return Belt_Array.reduce(num, 0, (function (acc, x) {
                return acc + x | 0;
              }));
}

var answerSet = Belt_Array.map(Belt_Array.map(Belt_Array.map(input.split("\n\n"), splitPerson), (function (xs) {
            return Belt_Array.map(xs, splitAnswer);
          })), (function (xs) {
        return Belt_Array.map(xs, answerArrayToSet);
      }));

console.log(sum(Belt_Array.map(Belt_Array.map(answerSet, getUnion), getSize)));

var azArray = "abcdefghijklmnopqrstuvwxyz".split("");

var wholeSet = Belt_SetString.fromArray(azArray);

function getIntersection(answer) {
  return Belt_Array.reduce(answer, wholeSet, Belt_SetString.intersect);
}

console.log(sum(Belt_Array.map(Belt_Array.map(answerSet, getIntersection), getSize)));

exports.input = input;
exports.splitGroup = splitGroup;
exports.splitPerson = splitPerson;
exports.splitAnswer = splitAnswer;
exports.answerArrayToSet = answerArrayToSet;
exports.getUnion = getUnion;
exports.getSize = getSize;
exports.sum = sum;
exports.answerSet = answerSet;
exports.azArray = azArray;
exports.wholeSet = wholeSet;
exports.getIntersection = getIntersection;
/* input Not a pure module */
